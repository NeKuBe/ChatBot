services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - evolution
    ports:
      - "11434:11434"

  whisper:
    build: ./whisper
    container_name: whisper
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "8282:8282"
    networks:
      - evolution
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - GENERIC_TIMEZONE=America/Mexico_City
    volumes:
      - n8n_data:/root/.n8n
    depends_on:
      - redis
      - postgresql
    networks:
      - evolution
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - evolution
    restart: always

  postgresql:
    image: postgres:latest
    container_name: postgresql
    environment:
      - POSTGRES_USER=NeKuBe
      - POSTGRES_PASSWORD=Linkmaster11
      - POSTGRES_DB=ggtech
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=America/Mazatlan  # Tu zona horaria real
    volumes:
      - /etc/localtime:/etc/localtime:ro  # Agregar
      - /etc/timezone:/etc/timezone:ro
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - evolution
    restart: always
    command: ["postgres", "-c", "max_connections=1000", "-c", "listen_addresses=*"]
    ports:
      - 5432:5432
    expose:
      - 5432
  evolution:
    image: atendai/evolution-api:v2.2.3
    container_name: evolution
    restart: unless-stopped  # Cambia de 'always' si lo tienes
    ports:
      - "8080:8080"
    environment:
      - TZ=America/Mazatlan  # Tu zona horaria real
    volumes:
      - /etc/localtime:/etc/localtime:ro  # Agregar
      - /etc/timezone:/etc/timezone:ro
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - evolution
    env_file:
      - .env
    expose:
      - 8080
  yolov5:
    build: ./yolov5
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "8002:8002"
    networks:
      - evolution
    volumes:
      - ./yolov5:/app

  clip:
    build: ./CLIP
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "8001:8001"
    networks:
      - evolution      
    volumes:
      - ./CLIP:/app

  fastapi:
    build: ./fastAPI
    ports:
      - "9696:9696"
    networks:
      - evolution
    volumes:
      - ./fastAPI:/app

  langchain:
    build: ./langchain
    volumes:
      - ./langchain:/app
    networks:
      - evolution
  chroma:
    image: chromadb/chroma
    container_name: chroma
    ports:
      - "1010:8000"  # Puerto para acceder desde Langchain
    volumes:
      - ./chroma_data:/chroma/chroma  # Persistencia local
    environment:
      IS_PERSISTENT: "TRUE"
      ANONYMIZED_TELEMETRY: "FALSE"
    networks:
      - evolution
    restart: unless-stopped
  sheets:
    build:
      context: ./sheets
    volumes:
      - ./sheets/credenciales_google.json:/app/credenciales_google.json
    ports:
      - "8004:8004"
    networks:
      - evolution
  easyocr:
    build:
      context: ./easyocr
    ports:
      - "8005:8005"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    runtime: nvidia
  crawlee-api:
    build:
      context: ./crawlee
    container_name: crawlee
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - ./crawlee:/app
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - evolution
networks:
  evolution:
    external: true
    driver: bridge


volumes:
  portainer_data:
  evolution_instances:
  evolution_store:
  whisper_data:
  n8n_data:
  redis_data:
  postgresql_data:
  rasa_data:

